// File generated by `../script/generate-control-include.py`

namespace control {

  struct control_state_lasse_raspberrypi_0 : public control_state_base {
    bool ventilation{false};
  };

  struct control_params_lasse_raspberrypi_0 : public control_params_base {
  };

  sensors::control_state_lasse_raspberrypi_0 as_sensor(
      control_state_lasse_raspberrypi_0 const &state,
      std::optional<cc::timestamp_duration_t> const &timestamp = {}) {
    return {as_sensor(static_cast<control_state_base>(state), timestamp),
      {state.ventilation},
    };
  }

  sensors::control_params_lasse_raspberrypi_0 as_sensor(
      control_params_lasse_raspberrypi_0 const &params,
      std::optional<cc::timestamp_duration_t> const &timestamp = {}) {
    return {as_sensor(static_cast<control_params_base>(params), timestamp),
    };
  }

  using control_state =
    std::conditional<cc::host == cc::Host::lasse_raspberrypi_0,
    control_state_lasse_raspberrypi_0,
    control_state_base>::type;

  using control_params =
    std::conditional<cc::host == cc::Host::lasse_raspberrypi_0,
    control_params_lasse_raspberrypi_0,
    control_params_base>::type;

} // namespace control
